// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ee.itcollege.i377.team29.entities;

import ee.itcollege.i377.team29.entities.Piirivalvuri_seadus_intsidendi;
import java.lang.Integer;
import java.lang.Long;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Version;
import org.springframework.transaction.annotation.Transactional;

privileged aspect Piirivalvuri_seadus_intsidendi_Roo_Entity {
    
    @PersistenceContext
    transient EntityManager Piirivalvuri_seadus_intsidendi.entityManager;
    
    @Version
    @Column(name = "version")
    private Integer Piirivalvuri_seadus_intsidendi.version;
    
    public Integer Piirivalvuri_seadus_intsidendi.getVersion() {
        return this.version;
    }
    
    public void Piirivalvuri_seadus_intsidendi.setVersion(Integer version) {
        this.version = version;
    }
    
    @Transactional
    public void Piirivalvuri_seadus_intsidendi.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional
    public void Piirivalvuri_seadus_intsidendi.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            Piirivalvuri_seadus_intsidendi attached = Piirivalvuri_seadus_intsidendi.findPiirivalvuri_seadus_intsidendi(this.piirivalvuri_seadus_intsidendi_ID);
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional
    public void Piirivalvuri_seadus_intsidendi.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void Piirivalvuri_seadus_intsidendi.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional
    public Piirivalvuri_seadus_intsidendi Piirivalvuri_seadus_intsidendi.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        Piirivalvuri_seadus_intsidendi merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
    public static final EntityManager Piirivalvuri_seadus_intsidendi.entityManager() {
        EntityManager em = new Piirivalvuri_seadus_intsidendi().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long Piirivalvuri_seadus_intsidendi.countPiirivalvuri_seadus_intsidendis() {
        return entityManager().createQuery("SELECT COUNT(o) FROM Piirivalvuri_seadus_intsidendi o", Long.class).getSingleResult();
    }
    
    public static List<Piirivalvuri_seadus_intsidendi> Piirivalvuri_seadus_intsidendi.findAllPiirivalvuri_seadus_intsidendis() {
        return entityManager().createQuery("SELECT o FROM Piirivalvuri_seadus_intsidendi o", Piirivalvuri_seadus_intsidendi.class).getResultList();
    }
    
    public static Piirivalvuri_seadus_intsidendi Piirivalvuri_seadus_intsidendi.findPiirivalvuri_seadus_intsidendi(Long piirivalvuri_seadus_intsidendi_ID) {
        if (piirivalvuri_seadus_intsidendi_ID == null) return null;
        return entityManager().find(Piirivalvuri_seadus_intsidendi.class, piirivalvuri_seadus_intsidendi_ID);
    }
    
    public static List<Piirivalvuri_seadus_intsidendi> Piirivalvuri_seadus_intsidendi.findPiirivalvuri_seadus_intsidendiEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM Piirivalvuri_seadus_intsidendi o", Piirivalvuri_seadus_intsidendi.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
}
